name: Test & Build
on:
  push:
    paths:
      - "web/src/**/*.ts"
      - "web/src/**/*.tsx"
      - "web/package*.json"
      - "web/public/**/*"
      - "web/Caddyfile"
defaults:
  run:
    working-directory: ./web
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@master
        with:
          node-version: "12"
      - name: Install dependencies
        run: npm ci
      - name: LINTing
        run: npm run lint -- --quiet -f codeframe
      - name: Prettier
        run: npm run format -- --check
      # - name: Upload coverage report
      #   env:
      #     CC_TEST_REPORTER_ID: ${{ secrets.TestReporterID }}
      #     CI: "true"
      #   run: |
      #     curl -Ls https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
      #     chmod +x ./cc-test-reporter
      #     ./cc-test-reporter format-coverage -t lcov -o codeclimate.json
      #     ./cc-test-reporter upload-coverage -i codeclimate.json
  build:
    runs-on: ubuntu-latest
    needs: [test]
    strategy:
      matrix:
        node-version: [10.x, 12.x]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - name: npm install and build
        run: |
          npm ci
          npm run build --if-present
        env:
          CI: "true"
